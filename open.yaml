openapi: 3.0.0
info:
  title: Book Shop API
  description: API documentation for the Book Shop application.
  version: 1.0.0
paths:
  /book:
    post:
      summary: Create a book
      description: Create a new book in the book shop.
      operationId: createBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                year:
                  type: integer
                author:
                  type: string
                price:
                  type: number
                category_id:
                  type: integer
              required:
                - title
                - year
                - author
                - price
                - category_id
      responses:
        '200':
          description: Book created successfully
        '400':
          description: Bad Request
  /book/{id}:
    patch:
      summary: Update a book
      description: Update the details of an existing book.
      operationId: updateBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                year:
                  type: integer
                author:
                  type: string
                price:
                  type: number
                category_id:
                  type: integer
      responses:
        '200':
          description: Book updated successfully
        '400':
          description: Bad Request
    delete:
      summary: Delete a book
      description: Delete a specific book using its ID.
      operationId: deleteBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book deleted successfully
        '404':
          description: Book not found
  /books:
    get:
      summary: List books
      description: Retrieve a paginated list of books.
      operationId: listBooks
      parameters:
        - name: category_id
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of books retrieved successfully
  /book/{id}:
    get:
      summary: Get a book
      description: Retrieve details of a specific book using its ID.
      operationId: getBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book retrieved successfully
  /category:
    post:
      summary: Create a category
      description: Create a new book category.
      operationId: createCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: Category created successfully
  /category/{id}:
    patch:
      summary: Update a category
      description: Update the name of an existing category.
      operationId: updateCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Category updated successfully
    delete:
      summary: Delete a category
      description: Delete a specific category using its ID.
      operationId: deleteCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Category deleted successfully
  /categories:
    get:
      summary: List categories
      description: Retrieve a list of all categories.
      operationId: listCategories
      responses:
        '200':
          description: Categories retrieved successfully
  /signup:
    post:
      summary: Sign-up
      description: Register a new user.
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: User signed up successfully
  /signin:
    post:
      summary: Sign-in
      description: Authenticate an existing user and return a token.
      operationId: signIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: User signed in successfully
  /cart:
    post:
      summary: Update cart
      description: Add books to the cart.
      operationId: updateCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_ids:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Cart updated successfully
  /checkout:
    post:
      summary: Checkout
      description: Complete the order and checkout.
      operationId: checkout
      responses:
        '200':
          description: Checkout successful